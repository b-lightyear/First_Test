<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">

	<!-- 변경 저장 처리 -->
	<update id="update">
		update notice
		set title=#{title}, content = #{content}
			, filename = #{filename, jdbcType=VARCHAR}
			, filepath = #{filepath, jdbcType=VARCHAR}
		where id = #{id}
	</update>

	<!-- 공지글 목록수 조회 -->
	<select id="total" resultType="integer">
		select count(*) from notice
	</select>
	
	
	
	<!-- 공지글 목록 조회  -->
	<select id="list" resultType="notice.NoticeDTO">
	select *
	from (select row_number() over(order by root, step desc) no, name, n.*
		  from notice n, member m
		  where n.writer = m.userid
		  order by no desc) n
	where no between #{beginList} and #{endList}
	
	<!-- writer 값이 null이면 목록 전체가 뜨지 않는다... 이럴 경우 null값을 지우면 됨! -->
	
	<!-- 페이징처리X 
		select row_number() over(order by root, step desc) no, name, n.*
		from notice n, member m
		where n.writer = m.userid
		order by no desc
	-->
	
	<!-- select row_number() over(order by id ) no, name, n.* from notice n 
		 inner join member m on n.writer = m.userid order by no desc -->
	</select>

	<!-- 공지글 상세조회 -->
	<select id="detail" resultType="notice.NoticeDTO">
		select name, notice.*
		from notice inner join member m
		on notice.writer = m.userid
		where id = #{id}
	</select>

	<!-- 공지글 상세조회 -->
	<select id="read">
		update notice
		set readcnt = readcnt+1
		where id = #{id}
	</select>

	<!-- 공지글 신규 저장 -->
	<insert id="insert">
		insert into notice (title, content, writer, filename, filepath)
		values (#{title}, #{content}, #{writer} , #{filename, jdbcType=VARCHAR},
		#{filepath, jdbcType=VARCHAR})
	</insert>
	
	<!-- 공지글 답글 저장 -->
	<insert id="reply_insert">
		<![CDATA[
		{
		call declare 
		begin
			update notice set step = step+1
			where root = #{root} and step > #{step};
			
			insert into notice (title, content, writer, filename, filepath, root, step, indent)
			values (#{title}, #{content}, #{writer} , #{filename, jdbcType=VARCHAR},
					#{filepath, jdbcType=VARCHAR}, #{root}, #{step}+1, #{indent}+1);
		end
		}
		]]>
		
		<!-- <![CDATA[내용]]> : 문자열로 인식하게 하기. 위 쿼리문에서는 '>' 때문에 사용함.
								문자 하나만 감싸는 것보다는 쿼리문 전체를 감싸는 것을 추천! -->
		
		<!-- 오라클SQL은 두 개의 쿼리문 실행 불가, MySQL은 가능 -->
		<!-- 답글의 root: 원글의 root
			 답글의 step: 원글의 step +1 
			 답글의 indent: 원글의 indent +1 
					
			 답글저장시
			 원글과  root가 같고, 원글의 step보다 더 큰 step을 가진 글에 대해
			 step +1 -> step  -->

	</insert>
</mapper>